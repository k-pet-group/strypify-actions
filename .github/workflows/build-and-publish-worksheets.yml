name: 'Build and Publish AsciiDoc Worksheets to Github Pages'
on:
  workflow_call:
    inputs:
      output_dir:
        description: 'Directory for generated HTML files'
        required: false
        default: 'build'
        type: string
      strypify_version:
        description: The version (including leading v) of Strypify to use
        required: false
        default: 'v1.1.4'
        type: string

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout calling repository
      uses: actions/checkout@v4
    - name: Install Asciidoctor
      shell: bash
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ruby-full wget unzip xvfb
        sudo gem install asciidoctor
        sudo gem install asciidoctor-pdf
    - name: Install Strypify
      shell: bash
      run: |
        wget https://github.com/k-pet-group/strypify/releases/download/${{ inputs.strypify_version }}/Strypify-linux-x64.zip
        # Unzips to Strypify-linux-x64 subdirectory:
        unzip Strypify-linux-x64.zip
        wget https://github.com/k-pet-group/strypify/releases/download/${{ inputs.strypify_version }}/strypify-plugin.rb

    - name: Convert .adoc files to HTML
      shell: bash
      run: |
        OUTPUT_DIR="${{ inputs.output_dir }}"
        mkdir -p "$OUTPUT_DIR"
        SRC_DIR=$(pwd)
        echo "Looking in $(pwd)"
        ls -lrt .
        ls -lrt Strypify-linux-x64
        FILES=$(find $SRC_DIR -name "*.adoc")
        if [ -z "$FILES" ]; then
          echo "No .adoc files found."
          exit 0
        fi
        cd $OUTPUT_DIR
        for f in $FILES; do
          HTML_FILE="$(basename "${f%.adoc}.html")"
          PDF_FILE="$(basename "${f%.adoc}.pdf")"
          cp $f .
          SRC_FILE="$(basename "$f")"
          echo Generating $HTML_FILE
          PATH="$SRC_DIR/Strypify-linux-x64:$PATH" asciidoctor -v --trace -r "$SRC_DIR/strypify-plugin.rb" -o "$HTML_FILE" "$SRC_FILE" || echo "Failed to generate $HTML_FILE -- see logs"
          echo Generating $PDF_FILE
          PATH="$SRC_DIR/Strypify-linux-x64:$PATH" asciidoctor-pdf -v --trace -r "$SRC_DIR/strypify-plugin.rb" -o "$PDF_FILE" "$SRC_FILE" || echo "Failed to generate $PDF_FILE -- see logs"
          rm $SRC_FILE 
        done
        # Show all the generated files:
        find .
    - name: Generate index.html
      shell: bash
      run: |
        OUTPUT_DIR="${{ inputs.output_dir }}"
        FILES=$(find . -name "*.adoc")
        {
          echo "<!DOCTYPE html><html><head><meta charset='utf-8'><title>Worksheet Index</title></head><body><h1>Worksheets</h1><ul>"
          for f in $FILES; do
            fname=$(basename "${f%.adoc}.html")
            echo "<li><a href='./$fname'>$fname</a>"
            if [ ! -f "$OUTPUT_DIR/$fname" ]; then
              echo " (failed to generate -- see logs)"
            fi
            echo "</li>"
            fname=$(basename "${f%.adoc}.pdf")
            echo "<li><a href='./$fname'>$fname</a>"
            if [ ! -f "$OUTPUT_DIR/$fname" ]; then
              echo " (failed to generate -- see logs)"
            fi
            echo "</li>"
          done
          echo "</ul></body></html>"
        } > "$OUTPUT_DIR/index.html"
        echo "Generated index.html"
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ${{ inputs.output_dir }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
